{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vm1Name": {
            "type": "string",
            "defaultValue": "ngfw-a",
            "metadata": {
                "description": "Name of the first NGFW VM"
            }
        },
        "vm2Name": {
            "type": "string",
            "defaultValue": "ngfw-b",
            "metadata": {
                "description": "Name of the second NGFW VM"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "chocker",
            "metadata": {
                "description": "Username for the Virtual Machine. admin, Administrator among other values are disallowed - see Azure docs"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue" : "",
            "metadata": {
                "description": "Password for the Virtual Machine. Passwords must be 12 to 72 chars and have at least 3 of the following: Lowercase, uppercase, numbers, special chars"
            }
        },
        "vm1StorageAccount": {
            "type": "string",
            "defaultValue": "ngfwastoracct",
            "metadata": {
                "description": "A storage account will be created - enter a name (boot diags require a storage account). Between 3 and 24 characters. Lowercase letters and numbers only"
            }
        },
        "vm2StorageAccount": {
            "type": "string",
            "defaultValue": "ngfwbstoracct",
            "metadata": {
                "description": "A storage account will be created - enter a name (boot diags require a storage account). Between 3 and 24 characters. Lowercase letters and numbers only"
            }
        },
        "availabilitySetResourceGroup": {
            "type": "string",
            "defaultValue": "ngfw-rg",
            "metadata": {
                "description": "Name of the an existing Availability Set's Resource Group"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "ngfw-as",
            "metadata": {
                "description": "Name of the existing Availability Set"
            }
        },
        "virtualNetworkResourceGroup": {
            "type": "string",
            "defaultValue": "ngfw-rg",
            "metadata": {
                "description": "Name of the virtual network's Resource Group"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "ngfw-vnet",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "mgmtSubnetName": {
            "type": "string",
            "defaultValue": "mgmt",
            "metadata": {
                "description": "The FTDv management interface will attach to this subnet"
            }
        },
        "mgmtSubnetIP1": {
            "type": "string",
            "defaultValue": "10.0.0.5",
            "metadata": {
                "description": "NGFW IP on the mgmt interface (example: 192.168.0.10)"
            }
        },
        "mgmtSubnetIP2": {
            "type": "string",
            "defaultValue": "10.0.0.6",
            "metadata": {
                "description": "NGFW IP on the mgmt interface (example: 192.168.0.11)"
            }
        },
        "diagSubnetName": {
            "type": "string",
            "defaultValue": "diag",
            "metadata": {
                "description": "The FTDv diagnostic0/0 interface will attach to this subnet"
            }
        },
        "diagSubnetIP1": {
            "type": "string",
            "defaultValue": "10.0.1.5",
            "metadata": {
                "description": "NGFW IP on the diag interface (example: 192.168.1.10)"
            }
        },
        "diagSubnetIP2": {
            "type": "string",
            "defaultValue": "10.0.1.6",
            "metadata": {
                "description": "NGFW IP on the diag interface (example: 192.168.1.11)"
            }
        },
        "gig00SubnetName": {
            "type": "string",
            "defaultValue": "external",
            "metadata": {
                "description": "The FTDv Gigabit 0/0 interface will attach to this subnet"
            }
        },
        "gig00SubnetIP1": {
            "type": "string",
            "defaultValue": "10.0.2.5",
            "metadata": {
                "description": "The IP on the Gigabit 0/0 interface (example: 192.168.2.10)"
            }
        },
        "gig00SubnetIP2": {
            "type": "string",
            "defaultValue": "10.0.2.6",
            "metadata": {
                "description": "The IP on the Gigabit 0/0 interface (example: 192.168.2.11)"
            }
        },
        "gig01SubnetName": {
            "type": "string",
            "defaultValue": "internal",
            "metadata": {
                "description": "The FTDv Gigabit 0/1 interface will attach to this subnet"
            }
        },
        "gig01SubnetIP1": {
            "type": "string",
            "defaultValue": "10.0.3.5",
            "metadata": {
                "description": "The IP on the Gigabit 0/1 interface (example: 192.168.3.10)"
            }
        },
        "gig01SubnetIP2": {
            "type": "string",
            "defaultValue": "10.0.3.6",
            "metadata": {
                "description": "The IP on the Gigabit 0/1 interface (example: 192.168.3.11)"
            }
        },
        "VmSize": {
            "type": "string",
            "defaultValue": "Standard_D3_v2",
            "allowedValues": [ "Standard_D3_v2" , "Standard_D3" ],
            "metadata": {
                "description": "NGFW VM Size (Standard_D3_v2 or Standard_D3)"
            }
        }
    },
    "variables": {

        "virtualNetworkID": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        
        "vm1Nic0Name":"[concat(parameters('vm1Name'),'-nic0')]",
        "vm1Nic1Name":"[concat(parameters('vm1Name'),'-nic1')]",
        "vm1Nic2Name":"[concat(parameters('vm1Name'),'-nic2')]",
        "vm1Nic3Name":"[concat(parameters('vm1Name'),'-nic3')]",
        "vm2Nic0Name":"[concat(parameters('vm2Name'),'-nic0')]",
        "vm2Nic1Name":"[concat(parameters('vm2Name'),'-nic1')]",
        "vm2Nic2Name":"[concat(parameters('vm2Name'),'-nic2')]",
        "vm2Nic3Name":"[concat(parameters('vm2Name'),'-nic3')]",
        
        "vm1Nic0NsgName":"[concat(variables('vm1Nic0Name'),'-NSG')]",
        "vm2Nic0NsgName":"[concat(variables('vm2Nic0Name'),'-NSG')]",

        "vm1MgmtPublicIPAddressName": "[concat(parameters('vm1Name'),'nic0-ip')]",
        "vm2MgmtPublicIPAddressName": "[concat(parameters('vm2Name'),'nic0-ip')]",
        "vm1MgmtPublicIPAddressType": "Static",
        "vm2MgmtPublicIPAddressType": "Static",
        "vm1MgmtPublicIPAddressDnsName": "[variables('vm1MgmtPublicIPAddressName')]",
        "vm2MgmtPublicIPAddressDnsName": "[variables('vm2MgmtPublicIPAddressName')]"
    },
    "resources": [
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vm1MgmtPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
              "publicIPAllocationMethod": "[variables('vm1MgmtPublicIpAddressType')]",
              "dnsSettings": {
                "domainNameLabel": "[variables('vm1MgmtPublicIPAddressDnsName')]"
              }
            }
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vm2MgmtPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
              "publicIPAllocationMethod": "[variables('vm2MgmtPublicIpAddressType')]",
              "dnsSettings": {
                "domainNameLabel": "[variables('vm2MgmtPublicIPAddressDnsName')]"
              }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('vm1Nic0NsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-Rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SFtunnel-Rule",
                        "properties": {
                            "description": "Allow tcp 8305",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8305",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('vm2Nic0NsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-Rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SFtunnel-Rule",
                        "properties": {
                            "description": "Allow tcp 8305",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8305",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1Nic0Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('vm1Nic0NsgName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vm1MgmtPublicIPAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('mgmtSubnetIP1')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('mgmtSubnetName'))]"
                            },  
                            "publicIPAddress":{
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('vm1MgmtPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vm1Nic0NsgName'))]"
                },
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm2Nic0Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('vm2Nic0NsgName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vm2MgmtPublicIPAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('mgmtSubnetIP2')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('mgmtSubnetName'))]"
                            },  
                            "publicIPAddress":{
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('vm2MgmtPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vm2Nic0NsgName'))]"
                },
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1Nic1Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('diagSubnetIP1')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('diagSubnetName'))]"
                            }                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm2Nic1Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('diagSubnetIP2')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('diagSubnetName'))]"
                            }                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1Nic2Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('gig00SubnetIP1')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('gig00SubnetName'))]"
                            }                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm2Nic2Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('gig00SubnetIP2')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('gig00SubnetName'))]"
                            }                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1Nic3Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('gig01SubnetIP1')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('gig01SubnetName'))]"

                            }                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2017-03-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm2Nic3Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress" : "[parameters('gig01SubnetIP2')]",
                            "subnet": {
                                "id": "[concat(variables('virtualNetworkID'),'/subnets/', parameters('gig01SubnetName'))]"

                            }                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(parameters('vm1StorageAccount'))]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
              "accountType": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(parameters('vm2StorageAccount'))]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
              "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm1Name')]",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "ftdv-azure-byol",
                "product": "cisco-ftdv",
                "publisher": "cisco"
            },           
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('vm1StorageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm1Nic0Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm1Nic1Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm1Nic2Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm1Nic3Name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId(parameters('availabilitySetResourceGroup'),'Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
                  },
  
                "osProfile": {
                    "computername": "[parameters('vm1Name')]",
                    "adminUsername": "[parameters('AdminUsername')]",
                    "adminPassword": "[parameters('AdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "cisco",
                        "offer": "cisco-ftdv",
                        "sku": "ftdv-azure-byol",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1Nic0Name'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1Nic1Name'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1Nic2Name'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1Nic3Name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://',parameters('vm1StorageAccount'),'.blob.core.windows.net')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm2Name')]",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "ftdv-azure-byol",
                "product": "cisco-ftdv",
                "publisher": "cisco"
            },           
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('vm2StorageAccount'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm2Nic0Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm2Nic1Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm2Nic2Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vm2Nic3Name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId(parameters('availabilitySetResourceGroup'),'Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
                  },
  
                "osProfile": {
                    "computername": "[parameters('vm2Name')]",
                    "adminUsername": "[parameters('AdminUsername')]",
                    "adminPassword": "[parameters('AdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "cisco",
                        "offer": "cisco-ftdv",
                        "sku": "ftdv-azure-byol",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2Nic0Name'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2Nic1Name'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2Nic2Name'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2Nic3Name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://',parameters('vm2StorageAccount'),'.blob.core.windows.net')]"
                    }
                }
            }
        }
    ],
    "outputs": {  }
}
